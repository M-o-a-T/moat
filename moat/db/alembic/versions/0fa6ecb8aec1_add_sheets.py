"""Add sheets

Revision ID: 0fa6ecb8aec1
Revises: 9ebac65fdfa3
Create Date: 2025-03-03 18:18:04.125587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0fa6ecb8aec1'
down_revision: Union[str, None] = '9ebac65fdfa3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    from moat.db import load
    from alembic import context
    config = context.config

    meta=load(config.attributes["config"])

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sheet',
        sa.Column('typ_id', sa.Integer(), nullable=True),
        sa.Column('start', sa.Integer(), server_default='0', nullable=False, comment='Position of first label'),
        sa.Column('printed', sa.Boolean(), nullable=False),
        sa.Column('id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['typ_id'], ['labeltyp.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table("label") as batch_op:
        batch_op.add_column(sa.Column('sheet_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key("LabelSheetRef", 'sheet', ['sheet_id'], ['id'])
        batch_op.drop_column('printed')
    # ### end Alembic commands ###

    st=sa.insert(meta.tables["sheet"]).values(id=1)
    op.execute(st)
    op.execute("commit")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('label', sa.Column('printed', sa.BOOLEAN(), nullable=False))
    op.drop_constraint(None, 'label', type_='foreignkey')
    op.drop_column('label', 'sheet_id')
    op.drop_table('sheet')
    # ### end Alembic commands ###
