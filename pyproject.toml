[build-system]
build-backend = "setuptools.build_meta"
requires = [ "setuptools", "wheel", "setuptools-scm",]

[project]
classifiers = [
	"Intended Audience :: Developers",
	"Programming Language :: Python :: 3",
	"Framework :: AsyncIO",
	"Framework :: Trio",
	"Framework :: AnyIO",
	"License :: OSI Approved",
	"Development Status :: 4 - Beta",
	]
dependencies = [
	"anyio ~= 4.5",
	"trio",
	"alembic",
	"anyio_serial",
	"asyncactor",
	"asyncclick",
	"asyncowfs",
	"asyncscope",
	"asyncwebsockets",
	"cffi",
	"git",
	"httpx",
	"jmespath",
	"jsonschema",
	"mqttproto",
	"outcome",
	"pyfuse3",
	"pymodbus",
	"range_set",
	"ruyaml",
	"simpleeval",
	"sqlalchemy",
	"tomlkit",
	"transitions",
	"wsproto",
	]
dynamic = [ "version",]
keywords = [ "MoaT",]
requires-python = ">=3.12"
name = "moat"
description = "The compleat MoaT"
readme = "README.md"

[[project.authors]]
email = "matthias@urlichs.de"
name = "Matthias Urlichs"

[project.scripts]
moat = "moat.main:cmd"

[project.license]
file = "LICENSE.txt"

[project.urls]
homepage = "https://m-o-a-t.org"
repository = "https://github.com/M-o-a-T/moat"

[tool.setuptools]
packages = [ "moat",]
[tool.setuptools.package-data]
"*" = ["*.yaml"]

[tool.setuptools_scm]

[tool.moat]

[tool.ruff]
preview = true
line-length = 99

[tool.pytest.ini_options]
# addopts = "--cov=moat --cov-report=term-missing -x"
addopts = "-x"
log_cli_level = "DEBUG"
pythonpath = [
  ".",
]
testpaths = [
  "tests",
]
asyncio_default_fixture_loop_scope = "function"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["BLE001","ERA","N","FIX","TD","RET50","C","PLR","EM10","TRY003","FBT","T2","D4","D3","D2","PLW1514","RUF002","RUF001","S101","A003","D107","D105","PERF","PTH","ANN","I001","RUF005","TRY300","TRY301","RUF003","INP001","PIE790","SIM108","TRY400","UP038","S307","B028","PIE790","UP015","COM812"]
explicit-preview-rules = true

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["help","id"]

[tool.ruff.lint.isort]
no-lines-before = ["future"]
required-imports = ["from __future__ import annotations"]
section-order = ["third-party","local-folder","moat","upy","first-party","standard-library","typing","future"]
extra-standard-library = ["anyio","pytest"]
force-to-top = ["moat.util"]

[tool.ruff.lint.isort.sections]
moat = ["moat"]
upy = ["esp","machine","micropython"]
typing = ["typing"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
# Regexes for lines to exclude from consideration
include = [
    "moat/lib/codec/*",
    "tests/*",
]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    "except ImportError:",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",

    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    ]


