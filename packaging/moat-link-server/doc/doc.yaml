path: !P ':'
title: System Root
doc: |2
  This is the root of the MoaT-Link topic structure.
  The root topic itself is free-form and typically indicates its owner and
  purpose.
---
path: !P error
title: Error messages
doc: |2
  All messages that report errors go here.
  They are typically not retained; an error handler will collect them.
  "All OK" messages are sent with a level of zero.
items:
  title: Undocumented error. Fix me!
---
path: !P error.link.mqtt.codec:
title: incompatible data
doc: |2
  The content of an incoming message could not be decoded.
  .
  This problem converts the message to raw data, for obvious reasons.
---
path: !P error.link.mqtt.meta:
title: incompatible metadata
doc: |2
  The metadata of an incoming message could not be decoded.
  It is cleared instead.
  .
  This problem converts the message to raw data because otherwise
  there is no guarantee of it not causing a cycle or similar.
---
path: !P error.link.mqtt.topic:
title: incompatible topic
doc: |2
  The topic of an incoming message could not be parsed by moat.util.Path,
  possibly because one of its elements starts with a colon.
  It is imported verbatim instead.
  .
  This problem does not convert the message to raw data.
---
path: !P error.run.service.conn.*:
title: Backend link failed
doc: |2
  The sending client got an error talking to backend [-1].
---
path: !P state
title: System state
doc: |2
  This part contains the system state.
  State items are published with the Retain flag set.
  Entries are tagged with their source and a timestamp to prevent
  accidentally introducing stale data.
items:
  title: Undocumented state item. Fix me!
---
path: !P cmd
title: System commands
doc: |2
  This part contains commands, i.e. messages that instruct some part of
  MoaT to do something.
items:
  title: Undocumented command. Fix me!
---
path: !P cfg
title: Subsystem configurations
doc: |2
  This part contains configuration data.
  Config entries are published with the Retain flag set.
items:
  title: Undocumented configuration. Fix me!
---
path: !P cfg.link
title: Data links
doc: |2
  MoaT implements bidirectional forwarding of its data to other systems,
  as well as to other MQTT topics or topic hierarchies.
items:
  title: Undocumented link
---
path: !P run
title: Runtime data and related structures
doc: |2
  Runtime data is by 
---
_path: !P run.service
title: Hierarchy for service addresses
---
_path: !P run.service.*.server.*
title: Service [-3] is provided by [-1]
doc: |2
  Service activity: this message indicates that a server is operational.
  Other servers will connect to it, for exchanging state and forwarding clients.
  .
  The data contains information how to connect to this server/service.
  .
  This is a retained topic. A WILL message auto-deletes the message
  when the server dies.
  .
  Clients should not subscribe to this topic.
---
_path: !P run.service.*.client.*
title: Client [-1] using service [-3] connects to server [meta.origin]
retain: true
doc: |2
  Announcements which server a named client has connected to.
  .
  Servers listen to this topic and add forwarding records.
  .
  Other clients which need to talk to the named client can
  do so via any server, which will transparently forward the message.
  .
  Clients should not subscribe to this topic.
---
_path: !P run.service.*.down
title: Shutdown alert for service [-2]
doc: |2
  A message on this topic indicates that the server [meta.origin]
  intends to no longer provides service [-2]. Clients should subscribe
  to this topic and switch to another server transparently.
  .
  Servers subscribe to this topic and coordinate publishing a new record on
  `run.service.[-2].conn` if the currently-active server shuts down.
---
_path: !P run.service.*.stamp.*
title: Timestamp/sync for server [-1] on service [-3]
doc: |2
  This topic is used for syncing, to ensure (for the most part) that a
  server has read all previous messages.
  .
  A client sends an ``i.stamp`` command to its server to request a sync token,
  sends that token to the topic, then sends an ``i.sync`` command to the
  server. This command waits until the token has arrived on MQTT.
  .
  This scheme is not fool-proof, given multi-threaded servers, but it removes
  enough timing insecurity to be generally useful.
  .
  Typically stamp messages are increasing (counter or timestamp) so the server
  doesn't need to keep a list.
---
_path: !P run.service.*.conn
title: Server announcement for service [-2]
retain: true
doc: |2
  This is the retained topic for a service's current "leading" server.
  It may contain an access token for delegating permission checks to the MQTT
  server (which needs them anyway).
  .
  Inter-server negotiation is performed on the `run.service.[-2].ping` topic.
---
_path: !P run.service.*.ping
title: Server negotiation for service [-2]
doc: |2
  This channel is used for servers to negotiate which is the current leader,
  i.e. the one to be contacted by new clients (and servers, for data recovery).
  .
  The leader elected here is responsible for updating the `run.service.[-2].conn`
  topic.
---
path: !P doc
title: Documentation
doc: |2
  MoaT stores its documentation inside itself, as "MarkDown"-enhanced text.

  Any message in ``moat/#`` should have a corresponding entry in
  ``moat/doc/#``. Entries may be maps tagged by language code. Text is
  interpreted as Markdown.

  Documentation about MoaT command line usage is located in ``moat.doc.shell``.
---
path: !P schema
title: Schema items
doc: |2
  The data structure of every item in the MoaT storage is available
  at schema/‹Path›.
  The schema has an additional entry "items" which describes the next level(s)
  if there's no sepatare Schema entry for it.
items:
  title: Schema item
---
path: !P schema._
title: Internal schema items
doc: |2
  This part contains schema items that are references by other parts of the schema.

  This part is not named '$defs' because it's not part of the original document
  and thus needs to be loaded separately.
items:
  title: Undocumented schema entry.
---
path: !P schema._.api.root
title: OpenAPI meta schema
doc: |2
  A copy of the OpenAPI root schema description
---
path: !P _.api.root
title: OpenAPI root schema
doc: |2
  Our OpenAPI root schema is here.
---
path: !P msg
title: Intermediate system messaging
doc: |2
  This part collects MQTT messages between MoaT instances that are neither commands
  nor state.
items:
  title: Undocumented message.
---
