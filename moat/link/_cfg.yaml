backend_example:
  _doc: "Rename to 'backend'"
  typ: mqtt
  codec: std-cbor

  host: localhost
  user: foo
  pass: bar
  ssl:
    cert: '/path/to/cert.pem'
    key: '/path/to/cert.key'
client:
  init_timeout: 5  # set to None to not require a server
  # name: foo

# also in moat/link/_main.py
root: !P XXX.NotConfigured.YZ
qos: 0

# Hostname of the main server.
main: some_host

target:
  # Well-known prefixes off the root

  # this subtree is not stored. Hard-coded into the server, cannot be changed.
  # run: !P run

  # this subtree holds conversion jobs
  conv: !P convert

timeout:
  # time after which deleted entries are flushed
  delete: 100000

  # Repeater for Ping messages
  ping: 5

  # Cleanup after ping timeouts
  no_ping: 17

  # client reconnect
  connect: 
    initial: 5
    max: 30
    factor: 1.3


# Notifications are messages below :R.notify.TOPIC topic.
notify:
  keepalive:
    # timeout: 30  # default: ping *1.5
    #
    # topic: my_secret_topic
    title: Server Link down?
    msg: |
      The MoaT system at 'some_host' is silent. (MQTT-Keepalive)
    prio: fatal
    ok:
      title: Server Link OK
      msg: |
        The MoaT system at 'some_host' is back up. (MQTT-Keepalive)
      prio: info


  path: !P notify
  # ignore messages older than â€¦ seconds
  max_age: 30

  # Backends
  backend:
    - ntfy
  ntfy:
    # See https://docs.nfty.sh/
    
    url: https://ntfy.sh.example/
    # token: tk_whatever
    path: !P notify
    # messages are posted to notify.TOPIC.WHATEVER if "topic" is not set
    # topic: my_secret_topic



