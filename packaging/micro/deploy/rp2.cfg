# Basic setup for an RP2 controller on USB
#
micro:
  install:
    port: rp2
    dir: /mnt/rp2

  setup:
    args: &cmdline
      # defaults for "moat micro setup|sync" arguments
      cross: "lib/micropython/mpy-cross/build/mpy-cross"
      update: True  # unless told not to

    # the serial port we're talking to.
    # The top level must be one of the apps in this section
    remote: !P r

    # the config subtree to upload, relative to "micro".
    cfg: !P cfg.rp2

    # MoaT stack
    apps:
      r: serial.Raw
    r: &rem
      port: /dev/ttyACM0
      mode: &rmode
        rate: 115200
    
  # main MoaT stack. We could use a 'serial.Link' app instead, but this way
  # "moat micro setup --run" keeps the existing link up.
  apps:
    r: serial.Raw
    s: remote.Link
    n: net.unix.Port
  r: *rem
  s:
    path: !P r
    link: &link
      frame: 0x85
      console: true
  n: &np
    port: /tmp/moat.rp2.test
      
  cfg:
    rp2:
      # this is the config we send to the satellite
      net: !R _  # remove any networking

      apps:
        wdt: wdt.Cmd
        r: stdio.StdIO
        _s: _sys.Cmd
        _c: cfg.Cmd
        f: fs.Cmd
      r: 
        port: 0
        mode: *rmode
        link: *link

  # All other commands use this section by default.
  # They talk to the "moat run" multiplexer connected to this satellite.
  connect:
    sync: *cmdline
    remote: !P r.s
    cfg: !P cfg.rp2
    path:
      fs: !P f
      sys: !P _s
      cfg: !P _c
    apps:
      r: net.unix.Link
    r: *np

logging:
  version: 1
  loggers: {}
  root:
    handlers:
      - stderr
    level: INFO
  handlers:
#   logfile:
#     class: logging.FileHandler
#     level: DEBUG
#     formatter: std
#     filename: _test.log
    stderr:
      class: logging.StreamHandler
      level: DEBUG
      formatter: std
      stream: "ext://sys.stderr"
  formatters:
    std:
      class: "moat.util.TimeOnlyFormatter"
      format: "%(asctime)s %(levelname)s:%(name)s:%(message)s"
      disable_existing_loggers: false
  
